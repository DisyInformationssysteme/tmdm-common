// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.2_01, construire R40)
// Generated source version: 1.1.2

package talend.core.transformer.plugin.v2.tiscall.webservices;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class WSxmlService_SerializerRegistry implements SerializerConstants {
    public WSxmlService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://talend.org", "args");
            CombinedSerializer serializer = new talend.core.transformer.plugin.v2.tiscall.webservices.Args_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,talend.core.transformer.plugin.v2.tiscall.webservices.Args.class, type, serializer);
        }
        {
            QName type = new QName("http://talend.org", "runJobReturn");
            CombinedSerializer serializer = new talend.core.transformer.plugin.v2.tiscall.webservices.RunJobReturn_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,talend.core.transformer.plugin.v2.tiscall.webservices.RunJobReturn.class, type, serializer);
        }
        {
            QName type = new QName("http://talend.org", "ArrayOf_xsd_string");
            CombinedSerializer serializer = new talend.core.transformer.plugin.v2.tiscall.webservices.ArrayOf_xsd_string_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,talend.core.transformer.plugin.v2.tiscall.webservices.ArrayOf_xsd_string.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
