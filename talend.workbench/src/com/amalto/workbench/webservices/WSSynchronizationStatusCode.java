// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.2_01, construire R40)
// Generated source version: 1.1.2

package com.amalto.workbench.webservices;


import java.util.Map;
import java.util.HashMap;

public class WSSynchronizationStatusCode {
    private java.lang.String value;
    private static Map valueMap = new HashMap();
    public static final String _COMPLETEDString = "COMPLETED";
    public static final String _FAILEDString = "FAILED";
    public static final String _RUNNINGString = "RUNNING";
    
    public static final java.lang.String _COMPLETED = new java.lang.String(_COMPLETEDString);
    public static final java.lang.String _FAILED = new java.lang.String(_FAILEDString);
    public static final java.lang.String _RUNNING = new java.lang.String(_RUNNINGString);
    
    public static final WSSynchronizationStatusCode COMPLETED = new WSSynchronizationStatusCode(_COMPLETED);
    public static final WSSynchronizationStatusCode FAILED = new WSSynchronizationStatusCode(_FAILED);
    public static final WSSynchronizationStatusCode RUNNING = new WSSynchronizationStatusCode(_RUNNING);
    
    protected WSSynchronizationStatusCode(java.lang.String value) {
        this.value = value;
        valueMap.put(this.toString(), this);
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static WSSynchronizationStatusCode fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (COMPLETED.value.equals(value)) {
            return COMPLETED;
        } else if (FAILED.value.equals(value)) {
            return FAILED;
        } else if (RUNNING.value.equals(value)) {
            return RUNNING;
        }
        throw new IllegalArgumentException();
    }
    
    public static WSSynchronizationStatusCode fromString(String value)
        throws java.lang.IllegalStateException {
        WSSynchronizationStatusCode ret = (WSSynchronizationStatusCode)valueMap.get(value);
        if (ret != null) {
            return ret;
        }
        if (value.equals(_COMPLETEDString)) {
            return COMPLETED;
        } else if (value.equals(_FAILEDString)) {
            return FAILED;
        } else if (value.equals(_RUNNINGString)) {
            return RUNNING;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    private Object readResolve()
        throws java.io.ObjectStreamException {
        return fromValue(getValue());
    }
    
    public boolean equals(Object obj) {
        if (!(obj instanceof WSSynchronizationStatusCode)) {
            return false;
        }
        return ((WSSynchronizationStatusCode)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
