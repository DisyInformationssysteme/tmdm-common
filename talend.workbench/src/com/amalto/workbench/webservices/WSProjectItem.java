// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.2_01, construire R40)
// Generated source version: 1.1.2

package com.amalto.workbench.webservices;


public class WSProjectItem {
    protected java.lang.String xmlString;
    protected com.amalto.workbench.webservices.WSInboundAdaptorPK wsInboundAdaptorPK;
    protected com.amalto.workbench.webservices.WSDataClusterPK wsDataClusterPK;
    protected boolean createIfDoesNotExist;
    protected boolean updateIfExists;
    protected java.lang.String username;
    
    public WSProjectItem() {
    }
    
    public WSProjectItem(java.lang.String xmlString, com.amalto.workbench.webservices.WSInboundAdaptorPK wsInboundAdaptorPK, com.amalto.workbench.webservices.WSDataClusterPK wsDataClusterPK, boolean createIfDoesNotExist, boolean updateIfExists, java.lang.String username) {
        this.xmlString = xmlString;
        this.wsInboundAdaptorPK = wsInboundAdaptorPK;
        this.wsDataClusterPK = wsDataClusterPK;
        this.createIfDoesNotExist = createIfDoesNotExist;
        this.updateIfExists = updateIfExists;
        this.username = username;
    }
    
    public java.lang.String getXmlString() {
        return xmlString;
    }
    
    public void setXmlString(java.lang.String xmlString) {
        this.xmlString = xmlString;
    }
    
    public com.amalto.workbench.webservices.WSInboundAdaptorPK getWsInboundAdaptorPK() {
        return wsInboundAdaptorPK;
    }
    
    public void setWsInboundAdaptorPK(com.amalto.workbench.webservices.WSInboundAdaptorPK wsInboundAdaptorPK) {
        this.wsInboundAdaptorPK = wsInboundAdaptorPK;
    }
    
    public com.amalto.workbench.webservices.WSDataClusterPK getWsDataClusterPK() {
        return wsDataClusterPK;
    }
    
    public void setWsDataClusterPK(com.amalto.workbench.webservices.WSDataClusterPK wsDataClusterPK) {
        this.wsDataClusterPK = wsDataClusterPK;
    }
    
    public boolean isCreateIfDoesNotExist() {
        return createIfDoesNotExist;
    }
    
    public void setCreateIfDoesNotExist(boolean createIfDoesNotExist) {
        this.createIfDoesNotExist = createIfDoesNotExist;
    }
    
    public boolean isUpdateIfExists() {
        return updateIfExists;
    }
    
    public void setUpdateIfExists(boolean updateIfExists) {
        this.updateIfExists = updateIfExists;
    }
    
    public java.lang.String getUsername() {
        return username;
    }
    
    public void setUsername(java.lang.String username) {
        this.username = username;
    }
}
